[tool.ruff]
line-length = 160

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pylint
    "PL",
    # pydocstyle
    "D",
    # pep8-naming
    "N",
    # annotation
    "ANN"
]
ignore = [
    "ANN201", # Missing return type annotation for public function {name}
    "ANN205", # annotation for staticmethod,
#    "ANN001", # type annotation for function argument
    "D102", # docstring in public method
    "D103", # Missing docstring in public function
    "D107", # Missing docstring in `__init__`
    "D205", # 1 blank line required between summary line and description
    "D400", # First line should end with a period
    "D415", # First line should end with a period, question mark, or exclamation point
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D104", # Missing docstring in public package
    "PLR0915", # Too many statements
    "ANN202", # Missing return type annotation for private function
    "E722", # Do not use bare `except`
    "UP022", # Prefer `capture_output` over sending `stdout` and `stderr` to `PIPE`

]

[tool.ruff.lint.pylint]
max-locals = 20
max-args = 9

[tool.ruff.lint.flake8-annotations]
ignore-fully-untyped = true

[tool.ruff.lint.isort.sections]
# группируем импорты test_tools
"hyperus_packages" = ["main.py"]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "hyperus_packages", "first-party", "local-folder"]

# black formatter
[tool.black]
line-length = 160
target-version = ["py310", "py311", "py312", "py313"]
include = '\.pyi?$'
# 'extend-exclude' excludes files or directories in addition to the defaults
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
  ^/foo.py    # exclude a file named foo.py in the root of the project
  | .*_pb2.py  # exclude autogenerated Protocol Buffer files anywhere in the project
)
'''
